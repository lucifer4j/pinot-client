#
#  Copyright 2021 The original authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 'Cache Maven packages'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Start Pinot for tests'
        run: docker run -d -p 8000:8000 -p 9000:9000 apachepinot/pinot:0.12.0 QuickStart -type batch

      - name: 'Wait for Pinot to become ready'
        run: |
          until [[ "$(curl -s -o /dev/null -w "%{http_code}" -H 'Content-Type: application/json' -X POST -d '{"sql": "select 1"}' http://localhost:8000/query/sql)" = "200" ]]
          do
            echo "waiting for apache pinot to come up"
            sleep 5
          done
          until [[ "$(curl -s -H 'Content-Type: application/json' -X POST -d '{"sql": "select playerName from baseballStats limit 1"}' http://localhost:8000/query/sql | jq 'if (.exceptions | length) > 0 then 1 else 0 end')" = "0" ]]
          do
            echo "waiting for apache pinot to come up"
            sleep 5
          done

      - name: 'Build and test project'
        run: mvn -B clean verify
